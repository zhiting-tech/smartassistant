// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.0
// source: v2/plugin.proto

package proto

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OTAReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid         string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	FirmwareUrl string `protobuf:"bytes,2,opt,name=firmware_url,json=firmwareUrl,proto3" json:"firmware_url,omitempty"`
}

func (x *OTAReq) Reset() {
	*x = OTAReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTAReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTAReq) ProtoMessage() {}

func (x *OTAReq) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTAReq.ProtoReflect.Descriptor instead.
func (*OTAReq) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *OTAReq) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *OTAReq) GetFirmwareUrl() string {
	if x != nil {
		return x.FirmwareUrl
	}
	return ""
}

type OTAResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid  string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Step int32  `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *OTAResp) Reset() {
	*x = OTAResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTAResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTAResp) ProtoMessage() {}

func (x *OTAResp) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTAResp.ProtoReflect.Descriptor instead.
func (*OTAResp) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *OTAResp) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *OTAResp) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type AuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid    string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Params []byte `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AuthReq) Reset() {
	*x = AuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthReq) ProtoMessage() {}

func (x *AuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthReq.ProtoReflect.Descriptor instead.
func (*AuthReq) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *AuthReq) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *AuthReq) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid        string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	InstanceId int32  `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Attributes []byte `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *Instance) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *Instance) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Instance) GetAttributes() []byte {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Instance) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SetAttributesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetAttributesReq) Reset() {
	*x = SetAttributesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributesReq) ProtoMessage() {}

func (x *SetAttributesReq) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributesReq.ProtoReflect.Descriptor instead.
func (*SetAttributesReq) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *SetAttributesReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetAttributesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SetAttributesResp) Reset() {
	*x = SetAttributesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttributesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttributesResp) ProtoMessage() {}

func (x *SetAttributesResp) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttributesResp.ProtoReflect.Descriptor instead.
func (*SetAttributesResp) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *SetAttributesResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetAttributesResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid          string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Model        string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Manufacturer string `protobuf:"bytes,3,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	AuthRequired bool   `protobuf:"varint,4,opt,name=authRequired,proto3" json:"authRequired,omitempty"`
	AuthParams   []byte `protobuf:"bytes,5,opt,name=authParams,proto3" json:"authParams,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *Device) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Device) GetAuthRequired() bool {
	if x != nil {
		return x.AuthRequired
	}
	return false
}

func (x *Device) GetAuthParams() []byte {
	if x != nil {
		return x.AuthParams
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // 事件类型
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type HealthCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (x *HealthCheckReq) Reset() {
	*x = HealthCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckReq) ProtoMessage() {}

func (x *HealthCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckReq.ProtoReflect.Descriptor instead.
func (*HealthCheckReq) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckReq) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

type HealthCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid    string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Online bool   `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *HealthCheckResp) Reset() {
	*x = HealthCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResp) ProtoMessage() {}

func (x *HealthCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResp.ProtoReflect.Descriptor instead.
func (*HealthCheckResp) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckResp) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

func (x *HealthCheckResp) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type GetInstancesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid string `protobuf:"bytes,1,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (x *GetInstancesReq) Reset() {
	*x = GetInstancesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstancesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstancesReq) ProtoMessage() {}

func (x *GetInstancesReq) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstancesReq.ProtoReflect.Descriptor instead.
func (*GetInstancesReq) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *GetInstancesReq) GetIid() string {
	if x != nil {
		return x.Iid
	}
	return ""
}

type GetInstancesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Instances  []byte `protobuf:"bytes,3,opt,name=instances,proto3" json:"instances,omitempty"`
	OtaSupport bool   `protobuf:"varint,4,opt,name=ota_support,json=otaSupport,proto3" json:"ota_support,omitempty"`
}

func (x *GetInstancesResp) Reset() {
	*x = GetInstancesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstancesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstancesResp) ProtoMessage() {}

func (x *GetInstancesResp) ProtoReflect() protoreflect.Message {
	mi := &file_v2_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstancesResp.ProtoReflect.Descriptor instead.
func (*GetInstancesResp) Descriptor() ([]byte, []int) {
	return file_v2_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *GetInstancesResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetInstancesResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetInstancesResp) GetInstances() []byte {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *GetInstancesResp) GetOtaSupport() bool {
	if x != nil {
		return x.OtaSupport
	}
	return false
}

var File_v2_plugin_proto protoreflect.FileDescriptor

var file_v2_plugin_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x32, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x06, 0x4f, 0x54, 0x41, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x07, 0x4f, 0x54, 0x41, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x22, 0x33, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x71, 0x0a, 0x08, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x26, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x0f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x74, 0x61, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x32,
	0x8a, 0x05, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x08, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c,
	0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x30, 0x01, 0x12, 0x42,
	0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x24, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x03, 0x4f, 0x54, 0x41, 0x12, 0x1c, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x54, 0x41,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x54, 0x41, 0x52, 0x65,
	0x73, 0x70, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x1d, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73,
	0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x7a, 0x68,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x7a, 0x68,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x7a, 0x68, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x61,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v2_plugin_proto_rawDescOnce sync.Once
	file_v2_plugin_proto_rawDescData = file_v2_plugin_proto_rawDesc
)

func file_v2_plugin_proto_rawDescGZIP() []byte {
	file_v2_plugin_proto_rawDescOnce.Do(func() {
		file_v2_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_plugin_proto_rawDescData)
	})
	return file_v2_plugin_proto_rawDescData
}

var file_v2_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v2_plugin_proto_goTypes = []interface{}{
	(*OTAReq)(nil),            // 0: zhiting.sa.plugin.v2.OTAReq
	(*OTAResp)(nil),           // 1: zhiting.sa.plugin.v2.OTAResp
	(*AuthReq)(nil),           // 2: zhiting.sa.plugin.v2.AuthReq
	(*Instance)(nil),          // 3: zhiting.sa.plugin.v2.Instance
	(*SetAttributesReq)(nil),  // 4: zhiting.sa.plugin.v2.SetAttributesReq
	(*SetAttributesResp)(nil), // 5: zhiting.sa.plugin.v2.SetAttributesResp
	(*Device)(nil),            // 6: zhiting.sa.plugin.v2.device
	(*Event)(nil),             // 7: zhiting.sa.plugin.v2.event
	(*HealthCheckReq)(nil),    // 8: zhiting.sa.plugin.v2.healthCheckReq
	(*HealthCheckResp)(nil),   // 9: zhiting.sa.plugin.v2.healthCheckResp
	(*GetInstancesReq)(nil),   // 10: zhiting.sa.plugin.v2.GetInstancesReq
	(*GetInstancesResp)(nil),  // 11: zhiting.sa.plugin.v2.GetInstancesResp
	(*empty.Empty)(nil),       // 12: google.protobuf.Empty
}
var file_v2_plugin_proto_depIdxs = []int32{
	12, // 0: zhiting.sa.plugin.v2.Plugin.Discover:input_type -> google.protobuf.Empty
	12, // 1: zhiting.sa.plugin.v2.Plugin.Subscribe:input_type -> google.protobuf.Empty
	8,  // 2: zhiting.sa.plugin.v2.Plugin.HealthCheck:input_type -> zhiting.sa.plugin.v2.healthCheckReq
	0,  // 3: zhiting.sa.plugin.v2.Plugin.OTA:input_type -> zhiting.sa.plugin.v2.OTAReq
	2,  // 4: zhiting.sa.plugin.v2.Plugin.Connect:input_type -> zhiting.sa.plugin.v2.AuthReq
	2,  // 5: zhiting.sa.plugin.v2.Plugin.Disconnect:input_type -> zhiting.sa.plugin.v2.AuthReq
	10, // 6: zhiting.sa.plugin.v2.Plugin.GetInstances:input_type -> zhiting.sa.plugin.v2.GetInstancesReq
	4,  // 7: zhiting.sa.plugin.v2.Plugin.SetAttributes:input_type -> zhiting.sa.plugin.v2.SetAttributesReq
	6,  // 8: zhiting.sa.plugin.v2.Plugin.Discover:output_type -> zhiting.sa.plugin.v2.device
	7,  // 9: zhiting.sa.plugin.v2.Plugin.Subscribe:output_type -> zhiting.sa.plugin.v2.event
	9,  // 10: zhiting.sa.plugin.v2.Plugin.HealthCheck:output_type -> zhiting.sa.plugin.v2.healthCheckResp
	1,  // 11: zhiting.sa.plugin.v2.Plugin.OTA:output_type -> zhiting.sa.plugin.v2.OTAResp
	11, // 12: zhiting.sa.plugin.v2.Plugin.Connect:output_type -> zhiting.sa.plugin.v2.GetInstancesResp
	12, // 13: zhiting.sa.plugin.v2.Plugin.Disconnect:output_type -> google.protobuf.Empty
	11, // 14: zhiting.sa.plugin.v2.Plugin.GetInstances:output_type -> zhiting.sa.plugin.v2.GetInstancesResp
	5,  // 15: zhiting.sa.plugin.v2.Plugin.SetAttributes:output_type -> zhiting.sa.plugin.v2.SetAttributesResp
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_v2_plugin_proto_init() }
func file_v2_plugin_proto_init() {
	if File_v2_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTAReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTAResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttributesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAttributesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstancesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstancesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v2_plugin_proto_goTypes,
		DependencyIndexes: file_v2_plugin_proto_depIdxs,
		MessageInfos:      file_v2_plugin_proto_msgTypes,
	}.Build()
	File_v2_plugin_proto = out.File
	file_v2_plugin_proto_rawDesc = nil
	file_v2_plugin_proto_goTypes = nil
	file_v2_plugin_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PluginClient is the client API for Plugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginClient interface {
	// Discover 发现设备
	Discover(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Plugin_DiscoverClient, error)
	// StateChange 监听所有设备状态变化
	Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Plugin_SubscribeClient, error)
	HealthCheck(ctx context.Context, in *HealthCheckReq, opts ...grpc.CallOption) (*HealthCheckResp, error)
	OTA(ctx context.Context, in *OTAReq, opts ...grpc.CallOption) (Plugin_OTAClient, error)
	Connect(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*GetInstancesResp, error)
	Disconnect(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetInstances 获取设备所有实例
	GetInstances(ctx context.Context, in *GetInstancesReq, opts ...grpc.CallOption) (*GetInstancesResp, error)
	// SetAttributes 设置属性
	SetAttributes(ctx context.Context, in *SetAttributesReq, opts ...grpc.CallOption) (*SetAttributesResp, error)
}

type pluginClient struct {
	cc grpc.ClientConnInterface
}

func NewPluginClient(cc grpc.ClientConnInterface) PluginClient {
	return &pluginClient{cc}
}

func (c *pluginClient) Discover(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Plugin_DiscoverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Plugin_serviceDesc.Streams[0], "/zhiting.sa.plugin.v2.Plugin/Discover", opts...)
	if err != nil {
		return nil, err
	}
	x := &pluginDiscoverClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Plugin_DiscoverClient interface {
	Recv() (*Device, error)
	grpc.ClientStream
}

type pluginDiscoverClient struct {
	grpc.ClientStream
}

func (x *pluginDiscoverClient) Recv() (*Device, error) {
	m := new(Device)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pluginClient) Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Plugin_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Plugin_serviceDesc.Streams[1], "/zhiting.sa.plugin.v2.Plugin/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &pluginSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Plugin_SubscribeClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type pluginSubscribeClient struct {
	grpc.ClientStream
}

func (x *pluginSubscribeClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pluginClient) HealthCheck(ctx context.Context, in *HealthCheckReq, opts ...grpc.CallOption) (*HealthCheckResp, error) {
	out := new(HealthCheckResp)
	err := c.cc.Invoke(ctx, "/zhiting.sa.plugin.v2.Plugin/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) OTA(ctx context.Context, in *OTAReq, opts ...grpc.CallOption) (Plugin_OTAClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Plugin_serviceDesc.Streams[2], "/zhiting.sa.plugin.v2.Plugin/OTA", opts...)
	if err != nil {
		return nil, err
	}
	x := &pluginOTAClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Plugin_OTAClient interface {
	Recv() (*OTAResp, error)
	grpc.ClientStream
}

type pluginOTAClient struct {
	grpc.ClientStream
}

func (x *pluginOTAClient) Recv() (*OTAResp, error) {
	m := new(OTAResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pluginClient) Connect(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*GetInstancesResp, error) {
	out := new(GetInstancesResp)
	err := c.cc.Invoke(ctx, "/zhiting.sa.plugin.v2.Plugin/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) Disconnect(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/zhiting.sa.plugin.v2.Plugin/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) GetInstances(ctx context.Context, in *GetInstancesReq, opts ...grpc.CallOption) (*GetInstancesResp, error) {
	out := new(GetInstancesResp)
	err := c.cc.Invoke(ctx, "/zhiting.sa.plugin.v2.Plugin/GetInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) SetAttributes(ctx context.Context, in *SetAttributesReq, opts ...grpc.CallOption) (*SetAttributesResp, error) {
	out := new(SetAttributesResp)
	err := c.cc.Invoke(ctx, "/zhiting.sa.plugin.v2.Plugin/SetAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginServer is the server API for Plugin service.
type PluginServer interface {
	// Discover 发现设备
	Discover(*empty.Empty, Plugin_DiscoverServer) error
	// StateChange 监听所有设备状态变化
	Subscribe(*empty.Empty, Plugin_SubscribeServer) error
	HealthCheck(context.Context, *HealthCheckReq) (*HealthCheckResp, error)
	OTA(*OTAReq, Plugin_OTAServer) error
	Connect(context.Context, *AuthReq) (*GetInstancesResp, error)
	Disconnect(context.Context, *AuthReq) (*empty.Empty, error)
	// GetInstances 获取设备所有实例
	GetInstances(context.Context, *GetInstancesReq) (*GetInstancesResp, error)
	// SetAttributes 设置属性
	SetAttributes(context.Context, *SetAttributesReq) (*SetAttributesResp, error)
}

// UnimplementedPluginServer can be embedded to have forward compatible implementations.
type UnimplementedPluginServer struct {
}

func (*UnimplementedPluginServer) Discover(*empty.Empty, Plugin_DiscoverServer) error {
	return status.Errorf(codes.Unimplemented, "method Discover not implemented")
}
func (*UnimplementedPluginServer) Subscribe(*empty.Empty, Plugin_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedPluginServer) HealthCheck(context.Context, *HealthCheckReq) (*HealthCheckResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (*UnimplementedPluginServer) OTA(*OTAReq, Plugin_OTAServer) error {
	return status.Errorf(codes.Unimplemented, "method OTA not implemented")
}
func (*UnimplementedPluginServer) Connect(context.Context, *AuthReq) (*GetInstancesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedPluginServer) Disconnect(context.Context, *AuthReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedPluginServer) GetInstances(context.Context, *GetInstancesReq) (*GetInstancesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstances not implemented")
}
func (*UnimplementedPluginServer) SetAttributes(context.Context, *SetAttributesReq) (*SetAttributesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAttributes not implemented")
}

func RegisterPluginServer(s *grpc.Server, srv PluginServer) {
	s.RegisterService(&_Plugin_serviceDesc, srv)
}

func _Plugin_Discover_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PluginServer).Discover(m, &pluginDiscoverServer{stream})
}

type Plugin_DiscoverServer interface {
	Send(*Device) error
	grpc.ServerStream
}

type pluginDiscoverServer struct {
	grpc.ServerStream
}

func (x *pluginDiscoverServer) Send(m *Device) error {
	return x.ServerStream.SendMsg(m)
}

func _Plugin_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PluginServer).Subscribe(m, &pluginSubscribeServer{stream})
}

type Plugin_SubscribeServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type pluginSubscribeServer struct {
	grpc.ServerStream
}

func (x *pluginSubscribeServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Plugin_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zhiting.sa.plugin.v2.Plugin/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).HealthCheck(ctx, req.(*HealthCheckReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_OTA_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OTAReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PluginServer).OTA(m, &pluginOTAServer{stream})
}

type Plugin_OTAServer interface {
	Send(*OTAResp) error
	grpc.ServerStream
}

type pluginOTAServer struct {
	grpc.ServerStream
}

func (x *pluginOTAServer) Send(m *OTAResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Plugin_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zhiting.sa.plugin.v2.Plugin/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).Connect(ctx, req.(*AuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zhiting.sa.plugin.v2.Plugin/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).Disconnect(ctx, req.(*AuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_GetInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstancesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).GetInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zhiting.sa.plugin.v2.Plugin/GetInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).GetInstances(ctx, req.(*GetInstancesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_SetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAttributesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).SetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zhiting.sa.plugin.v2.Plugin/SetAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).SetAttributes(ctx, req.(*SetAttributesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zhiting.sa.plugin.v2.Plugin",
	HandlerType: (*PluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _Plugin_HealthCheck_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _Plugin_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Plugin_Disconnect_Handler,
		},
		{
			MethodName: "GetInstances",
			Handler:    _Plugin_GetInstances_Handler,
		},
		{
			MethodName: "SetAttributes",
			Handler:    _Plugin_SetAttributes_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Discover",
			Handler:       _Plugin_Discover_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Subscribe",
			Handler:       _Plugin_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "OTA",
			Handler:       _Plugin_OTA_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "v2/plugin.proto",
}
